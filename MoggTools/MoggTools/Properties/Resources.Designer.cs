//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoggTools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MoggTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;ITEM
        ///      POSITION 0.00000000000000
        ///      SNAPOFFS 0.00000000000000
        ///      LENGTH $LENGTH$
        ///      LOOP 0
        ///      ALLTAKES 0
        ///      COLOR 19150555
        ///      SEL 0
        ///      FADEIN 1 0.000000 0.000000
        ///      FADEOUT 1 0.000000 0.000000
        ///      MUTE 0
        ///      IGUID {$IGUID$}
        ///      NAME &quot;$NAME$&quot;
        ///      VOLPAN 1.000000 0.000000 1.000000 -1.000000
        ///      SOFFS 0.00000000000000 0.00000000000000
        ///      PLAYRATE 1.00000000000000 1 0.00000000000000 -65536
        ///      CHANMODE 0
        ///      GUID {$GUID$}
        ///      &lt;SOURCE MIDI
        ///        HASDATA 1 $TI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string midi_item {
            get {
                return ResourceManager.GetString("midi_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;REAPER_PROJECT 0.1 &quot;4.78/x64&quot; 1435594465
        ///  RIPPLE 0
        ///  GROUPOVERRIDE 0 0 0
        ///  AUTOXFADE 1
        ///  ENVATTACH 1
        ///  MIXERUIFLAGS 11 48
        ///  PEAKGAIN 1
        ///  FEEDBACK 0
        ///  PANLAW 1
        ///  PROJOFFS 0 0
        ///  MAXPROJLEN 0 600
        ///  GRID 3199 8 1 8 1 0 0
        ///  TIMEMODE 1 5 -1 30 0
        ///  PANMODE 3
        ///  CURSOR 0
        ///  ZOOM 100 0 0
        ///  VZOOMEX 6
        ///  USE_REC_CFG 0
        ///  RECMODE 1
        ///  SMPTESYNC 0 30 100 40 1000 300 0 0 1
        ///  LOOP 0
        ///  LOOPGRAN 0 4
        ///  RECORD_PATH &quot;&quot; &quot;&quot;
        ///  &lt;RECORD_CFG
        ///  &gt;
        ///  &lt;APPLYFX_CFG
        ///  &gt;
        ///  RENDER_FILE &quot;&quot;
        ///  RENDER_PATTERN &quot;&quot;
        ///  REND [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string rpp_proj {
            get {
                return ResourceManager.GetString("rpp_proj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   &lt;TRACK {$GUID$}
        ///    NAME &quot;$NAME$&quot;
        ///    PEAKCOL 16576
        ///    BEAT -1
        ///    AUTOMODE 0
        ///    VOLPAN $VOL$ $PAN$ -1 -1 1
        ///    MUTESOLO 0 0 0
        ///    IPHASE 0
        ///    ISBUS 0 0
        ///    BUSCOMP 0 0
        ///    SHOWINMIX 1 0.6667 0.5 1 0.5 0 -1 0
        ///    FREEMODE 0
        ///    SEL 0
        ///    REC 0 0 0 0 0 0 0
        ///    VU 2
        ///    TRACKHEIGHT 0 0
        ///    INQ 0 0 0 0.5 100 0 0 100
        ///    NCHAN 2
        ///    FX 1
        ///    TRACKID {$GUID$}
        ///    PERF 0
        ///    MIDIOUT -1
        ///    MAINSEND 1 0
        ///$ITEM$
        ///  &gt;
        ///.
        /// </summary>
        internal static string rpp_track {
            get {
                return ResourceManager.GetString("rpp_track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;ITEM
        ///      POSITION 0
        ///      SNAPOFFS 0
        ///      LENGTH $LENGTH$
        ///      LOOP 0
        ///      ALLTAKES 0
        ///      FADEIN 1 0 0 1 0 0
        ///      FADEOUT 1 0 0 1 0 0
        ///      MUTE 0
        ///      BEAT 0
        ///      SEL 0
        ///      IGUID {$IGUID$}
        ///      IID 1
        ///      NAME &quot;$MOGGNAME$&quot;
        ///      VOLPAN 1 0 0.70794578438414 -1
        ///      SOFFS 0
        ///      PLAYRATE 1 1 0 -1 0 0.0025
        ///      CHANMODE $CHANMODE$
        ///      GUID {$GUID$}
        ///      &lt;SOURCE VORBIS
        ///        FILE &quot;$MOGGNAME$&quot;
        ///      &gt;
        ///    &gt;.
        /// </summary>
        internal static string vorbis_item {
            get {
                return ResourceManager.GetString("vorbis_item", resourceCulture);
            }
        }
    }
}
